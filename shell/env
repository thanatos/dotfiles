is_directory_in_path() {
	python -c 'import argparse, os, sys
parser = argparse.ArgumentParser()
parser.prog = "is_directory_in_path"
parser.add_argument("directory")
pargs = parser.parse_args()
path = os.environ["PATH"].split(":")
sys.exit(1 if pargs.directory not in path else 0)
' "$@"
}

prepend_to_path() {
	if ! is_directory_in_path "$1"; then
		if [[ -z "$PATH" ]]; then
			PATH="$1"
		else
			PATH="$1:$PATH"
		fi
	fi
}
append_to_path() {
	if ! is_directory_in_path "$1"; then
		if [[ -z "$PATH" ]]; then
			PATH="$1"
		else
			PATH="$PATH:$1"
		fi
	fi
}

# Add custom tools to $PATH:
prepend_to_path "$HOME/.cargo/bin"
prepend_to_path "$HOME/.local/bin"
append_to_path "$DOTFILES/bin"
append_to_path "$HOME/Apps/bin"
export PATH

# vim is the One True Editor:
EDITOR=vim
export EDITOR

# less is more:
PAGER=less
export PAGER

# Always color:
if [[ "$(uname)" == "Darwin" ]]; then
	# OS X's `ls` doesn't use the same environment variables as GNU `ls`. These
	# are for the OS X `ls`, and attempt to color it like GNU `ls`. (However,
	# OS X's `ls` is not nearly as configurable.)
	export CLICOLOR=1
	export LSCOLORS='ExGxFxdxCxDxDxhbadacec'
	# Check to see if GNU coreutils is install; on OS X, it'll prefix itself
	# with a "g":
	if which gls >/dev/null 2>&1; then
		alias ls="gls --color"
		eval "`gdircolors "$DOTFILES"/dir_colors`"
	fi
else
	eval "`dircolors`"
	alias ls="ls --color"
fi
alias grep="grep --color"


# Make OS X more sane:
if [[ "$(uname)" == "Darwin" ]]; then
	# Check to see if GNU findutils is installed:
	if which gfind >/dev/null 2>&1; then
		alias find=gfind
	fi
fi


# If we have zoxide, use it:
if which zoxide >/dev/null 2>&1; then
	eval "$(zoxide init zsh)"
fi


# Other aliases:
if which exa >/dev/null 2>&1; then
	alias ll="exa -bghl"
else
	alias ll="ls -l"
fi
alias g="git"
